name: Pull Request Workflow

on: [pull_request,workflow_dispatch,push]

jobs:
  docker_test_and_deploy:
    environment: auth0
    runs-on: ubuntu-latest
    steps:
    - 
      name: Checkout
      uses: actions/checkout@v2
      with:
        submodules: true
    -
      name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    - 
      name: Configuration
      run: |
        cp .env.example .env
        cp neurostore/example_config.py neurostore/config.py
    - 
      name: Build backend
      run: |
        docker-compose build
        docker-compose \
          -f docker-compose.yml \
          -f docker-compose.dev.yml \
          up -d
    -
      name: Migrate/Upgrade database
      run: |
        docker-compose exec -T neurostore \
        bash -c \
            "python manage.py db merge heads && \
             python manage.py db stamp head && \
             python manage.py db migrate && \
             python manage.py db upgrade"
    -
      name: Ingest Data
      run: |
        docker-compose exec -T neurostore \
        bash -c "python manage.py ingest_neurosynth"
    - 
      name: Create test database
      run: |
        docker-compose exec -T \
        pgsql \
        psql -U postgres -c "create database test_db"
    - 
      name: Setup tmate session
      uses: mxschmitt/action-tmate@v3
      timeout-minutes: 45
    - 
      name: Run tests
      run: |
        docker-compose run \
          -e "APP_SETTINGS=neurostore.config.DockerTestConfig" \
          -e "AUTH0_CLIENT_ID=${AUTH0_CLIENT_ID}" \
          -e "AUTH0_CLIENT_SECRET=${AUTH0_CLIENT_SECRET}" \
          -e "AUTH0_BASE_URL=${AUTH0_BASE_URL}" \
          -e "AUTH0_ACCESS_TOKEN_URL=${AUTH0_ACCESS_TOKEN_URL}" \
          -e "AUTH0_AUTH_URL=${AUTH0_AUTH_URL}" \
          --rm -w /neurostore \
          neurostore \
          python -m pytest neurostore/tests

  style_check:
    runs-on: ubuntu-latest
    steps:
    - 
      name: Checkout
      uses: actions/checkout@v2
      with:
        submodules: true
    -
      name: run flake8
      run: |
        pip install flake8
        flake8 ./neurostore
