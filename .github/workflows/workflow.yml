name: Testing Workflow
on: [workflow_dispatch,push]

jobs:
  neurostore_build_and_test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: store
    steps:
    - 
      name: Checkout
      uses: actions/checkout@v2
      with:
        submodules: recursive
    -
      name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    - 
      name: Configuration
      run: |
        cp .env.example .env
    - 
      name: Build backend
      run: |
        docker-compose build
        docker network create nginx-proxy
        docker-compose \
          -f docker-compose.yml \
          -f docker-compose.dev.yml \
          up -d
    - 
      name: Create Test Database
      run: |
        until docker-compose exec -T \
        store_pgsql pg_isready -U postgres; do sleep 1; done

        docker-compose exec -T \
        store_pgsql \
        psql -U postgres -c "create database test_db"
    -
      name: Backend Tests
      env:
        AUTH0_CLIENT_ID: ${{ secrets.AUTH0_CLIENT_ID }}
        AUTH0_CLIENT_SECRET: ${{ secrets.AUTH0_CLIENT_SECRET }}
        AUTH0_BASE_URL: ${{ secrets.AUTH0_BASE_URL }}
        AUTH0_ACCESS_TOKEN_URL: ${{ secrets.AUTH0_ACCESS_TOKEN_URL }}
        AUTH0_AUTH_URL: ${{ secrets.AUTH0_AUTH_URL }}
      run: |
        docker-compose run \
          -e "APP_SETTINGS=neurostore.config.DockerTestConfig" \
          -e "AUTH0_CLIENT_ID=${AUTH0_CLIENT_ID}" \
          -e "AUTH0_CLIENT_SECRET=${AUTH0_CLIENT_SECRET}" \
          -e "AUTH0_BASE_URL=${AUTH0_BASE_URL}" \
          -e "AUTH0_ACCESS_TOKEN_URL=${AUTH0_ACCESS_TOKEN_URL}" \
          -e "AUTH0_AUTH_URL=${AUTH0_AUTH_URL}" \
          --rm -w /neurostore \
          neurostore \
          python -m pytest neurostore/tests

  neurosynth_build_and_test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: compose
    steps:
    - 
      name: Checkout
      uses: actions/checkout@v2
      with:
        submodules: recursive
    -
      name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    - 
      name: Configuration
      run: |
        cp .env.example .env
    # - 
      # name: Build backend
      # run: |
      #   docker-compose build
      #   docker network create nginx-proxy
      #   docker-compose \
      #     -f docker-compose.yml \
      #     -f docker-compose.dev.yml \
      #     up -d
    # - 
    #   name: Create Test Database
    #   run: |
    #     until docker-compose exec -T \
    #     synth_pgsql pg_isready -U postgres; do sleep 1; done

    #     docker-compose exec -T \
    #     synth_pgsql \
    #     psql -U postgres -c "create database test_db"
    # -
    #   name: Backend Tests
    #   env:
    #     AUTH0_CLIENT_ID: ${{ secrets.AUTH0_CLIENT_ID }}
    #     AUTH0_CLIENT_SECRET: ${{ secrets.AUTH0_CLIENT_SECRET }}
    #     AUTH0_BASE_URL: ${{ secrets.AUTH0_BASE_URL }}
    #     AUTH0_ACCESS_TOKEN_URL: ${{ secrets.AUTH0_ACCESS_TOKEN_URL }}
    #     AUTH0_AUTH_URL: ${{ secrets.AUTH0_AUTH_URL }}
    #   run: |
    #     docker-compose run \
    #       -e "APP_SETTINGS=neurosynth_compose.config.DockerTestConfig" \
    #       -e "AUTH0_CLIENT_ID=${AUTH0_CLIENT_ID}" \
    #       -e "AUTH0_CLIENT_SECRET=${AUTH0_CLIENT_SECRET}" \
    #       -e "AUTH0_BASE_URL=${AUTH0_BASE_URL}" \
    #       -e "AUTH0_ACCESS_TOKEN_URL=${AUTH0_ACCESS_TOKEN_URL}" \
    #       -e "AUTH0_AUTH_URL=${AUTH0_AUTH_URL}" \
    #       --rm -w /neurosynth \
    #       neurosynth \
    #       python -m pytest neurosynth_compose/tests
    # -
    #   name: Frontend Configuration, Build and Tests
    #   env:
    #     AUTH0_CLIENT_ID: ${{ secrets.AUTH0_CLIENT_ID }}
    #     AUTH0_CLIENT_SECRET: ${{ secrets.AUTH0_CLIENT_SECRET }}
    #     AUTH0_BASE_URL: ${{ secrets.AUTH0_BASE_URL }}
    #     AUTH0_ACCESS_TOKEN_URL: ${{ secrets.AUTH0_ACCESS_TOKEN_URL }}
    #     AUTH0_AUTH_URL: ${{ secrets.AUTH0_AUTH_URL }}
    #     REACT_APP_AUTH0_CLIENT_ID: ${{ secrets.REACT_APP_AUTH0_CLIENT_ID }}
    #     REACT_APP_AUTH0_DOMAIN: ${{ secrets.REACT_APP_AUTH0_DOMAIN }}
    #     REACT_APP_AUTH0_CLIENT_SECRET: ${{ secrets.REACT_APP_AUTH0_CLIENT_SECRET }}
    #   run: |
    #     cd neurosynth-frontend/ && \
    #     cp .env.example .env.dev && \
    #     docker-compose run \
    #       -e "APP_SETTINGS=neurosynth_compose.config.DockerTestConfig" \
    #       -e "AUTH0_CLIENT_ID=${AUTH0_CLIENT_ID}" \
    #       -e "AUTH0_CLIENT_SECRET=${AUTH0_CLIENT_SECRET}" \
    #       -e "AUTH0_BASE_URL=${AUTH0_BASE_URL}" \
    #       -e "AUTH0_ACCESS_TOKEN_URL=${AUTH0_ACCESS_TOKEN_URL}" \
    #       -e "AUTH0_AUTH_URL=${AUTH0_AUTH_URL}" \
    #       -e "REACT_APP_AUTH0_DOMAIN=${REACT_APP_AUTH0_DOMAIN}" \
    #       -e "REACT_APP_AUTH0_CLIENT_ID=${REACT_APP_AUTH0_CLIENT_ID}" \
    #       -e "REACT_APP_AUTH0_AUDIENCE=localhost" \
    #       -e "REACT_APP_AUTH0_CLIENT_SECRET=${REACT_APP_AUTH0_CLIENT_SECRET}" \
    #       -e "REACT_APP_ENV=DEV" \
    #       -e "REACT_APP_NEUROSTORE_API_DOMAIN=http://localhost/api" \
    #       -e "CI=true" \
    #       -e "REACT_APP_NEUROSYNTH_API_DOMAIN=http://localhost:81/api" \
    #       --rm -w /neurosynth/neurosynth-frontend \
    #       neurosynth \
    #       bash -c "cd /neurosynth/neurosynth-frontend && \
    #       npm install && npm run build:dev && npm run cy:install && npm run test && npm run cy:ci"

    # -
    #   name: Frontend Configuration, Build and Tests
    #   env:
    #     AUTH0_CLIENT_ID: ${{ secrets.AUTH0_CLIENT_ID }}
    #     AUTH0_CLIENT_SECRET: ${{ secrets.AUTH0_CLIENT_SECRET }}
    #     AUTH0_BASE_URL: ${{ secrets.AUTH0_BASE_URL }}
    #     AUTH0_ACCESS_TOKEN_URL: ${{ secrets.AUTH0_ACCESS_TOKEN_URL }}
    #     AUTH0_AUTH_URL: ${{ secrets.AUTH0_AUTH_URL }}
    #     REACT_APP_AUTH0_CLIENT_ID: ${{ secrets.REACT_APP_AUTH0_CLIENT_ID }}
    #     REACT_APP_AUTH0_DOMAIN: ${{ secrets.REACT_APP_AUTH0_DOMAIN }}
    #     REACT_APP_AUTH0_CLIENT_SECRET: ${{ secrets.REACT_APP_AUTH0_CLIENT_SECRET }}
    #   run: |
    #     cd neurosynth-frontend/ && \
    #     cp .env.example .env.dev && \
    #     docker-compose run \
    #       -e "APP_SETTINGS=neurosynth_compose.config.DockerTestConfig" \
    #       -e "AUTH0_CLIENT_ID=${AUTH0_CLIENT_ID}" \
    #       -e "AUTH0_CLIENT_SECRET=${AUTH0_CLIENT_SECRET}" \
    #       -e "AUTH0_BASE_URL=${AUTH0_BASE_URL}" \
    #       -e "AUTH0_ACCESS_TOKEN_URL=${AUTH0_ACCESS_TOKEN_URL}" \
    #       -e "AUTH0_AUTH_URL=${AUTH0_AUTH_URL}" \
    #       -e "REACT_APP_AUTH0_DOMAIN=${REACT_APP_AUTH0_DOMAIN}" \
    #       -e "REACT_APP_AUTH0_CLIENT_ID=${REACT_APP_AUTH0_CLIENT_ID}" \
    #       -e "REACT_APP_AUTH0_AUDIENCE=localhost" \
    #       -e "REACT_APP_AUTH0_CLIENT_SECRET=${REACT_APP_AUTH0_CLIENT_SECRET}" \
    #       -e "REACT_APP_ENV=DEV" \
    #       -e "REACT_APP_NEUROSTORE_API_DOMAIN=http://localhost/api" \
    #       -e "CI=true" \
    #       -e "REACT_APP_NEUROSYNTH_API_DOMAIN=http://localhost:81/api" \
    #       --rm -w /neurosynth/neurosynth-frontend \
    #       neurosynth \
    #       bash -c "cd /neurosynth/neurosynth-frontend && \
    #       npm install && npm run build:dev && npm run test"
    -
      name: Cypress Tests
      uses: cypress-io/github-action@v4
      env:
        REACT_APP_AUTH0_CLIENT_ID: ${{ secrets.REACT_APP_AUTH0_CLIENT_ID }}
        REACT_APP_AUTH0_CLIENT_SECRET: ${{ secrets.REACT_APP_AUTH0_CLIENT_SECRET }}
        REACT_APP_AUTH0_DOMAIN: ${{ secrets.REACT_APP_AUTH0_DOMAIN }}
        REACT_APP_AUTH0_AUDIENCE: localhost
      with:
        build: npm run build:dev
        start: npm run start-ci:dev
        browser: chrome
        wait-on: http://localhost:3000
        working-directory: /home/runner/work/neurostore/neurostore/compose/neurosynth-frontend

  style_check:
    runs-on: ubuntu-latest
    steps:
    - 
      name: Checkout
      uses: actions/checkout@v2
      with:
        submodules: recursive
    -
      name: run flake8
      run: |
        pip install flake8
        cd ./store
        flake8 ./neurostore
        cd ../compose
        flake8 ./neurosynth_compose
