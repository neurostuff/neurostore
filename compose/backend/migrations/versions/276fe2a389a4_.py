"""empty message

Revision ID: 276fe2a389a4
Revises: 
Create Date: 2020-09-03 21:00:23.544196

"""
from alembic import op
import sqlalchemy as sa
import sqlalchemy_utils

# revision identifiers, used by Alembic.
revision = "276fe2a389a4"
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "conditions",
        sa.Column("id", sa.Text(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("name", sa.String(), nullable=True),
        sa.Column("description", sa.String(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "roles",
        sa.Column("id", sa.Text(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("name", sa.Text(), nullable=True),
        sa.Column("description", sa.Text(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_table(
        "users",
        sa.Column("id", sa.Text(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("name", sa.Text(), nullable=True),
        sa.Column("email", sa.Text(), nullable=True),
        sa.Column("password", sa.Text(), nullable=True),
        sa.Column("active", sa.Boolean(), nullable=True),
        sa.Column("confirmed_at", sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("email"),
    )
    op.create_table(
        "datasets",
        sa.Column("id", sa.Text(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("name", sa.String(), nullable=True),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column("publication", sa.String(), nullable=True),
        sa.Column("doi", sa.String(), nullable=True),
        sa.Column("pmid", sa.String(), nullable=True),
        sa.Column("public", sa.Boolean(), nullable=True),
        sa.Column("nimads_data", sa.JSON(), nullable=True),
        sa.Column("user_id", sa.Text(), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "oauth",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("token", sqlalchemy_utils.types.json.JSONType(), nullable=False),
        sa.Column("user_id", sa.Text(), nullable=True),
        sa.Column("provider_user_id", sa.Text(), nullable=False),
        sa.Column("provider", sa.Text(), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("provider_user_id"),
    )
    op.create_table(
        "roles_users",
        sa.Column("user_id", sa.Text(), nullable=True),
        sa.Column("role_id", sa.Text(), nullable=True),
        sa.ForeignKeyConstraint(
            ["role_id"],
            ["roles.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
    )
    op.create_table(
        "studies",
        sa.Column("id", sa.Text(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("name", sa.String(), nullable=True),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column("publication", sa.String(), nullable=True),
        sa.Column("doi", sa.String(), nullable=True),
        sa.Column("pmid", sa.String(), nullable=True),
        sa.Column("public", sa.Boolean(), nullable=True),
        sa.Column("metadata_", sa.JSON(), nullable=True),
        sa.Column("user_id", sa.Text(), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "analyses",
        sa.Column("id", sa.Text(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("study_id", sa.Text(), nullable=True),
        sa.Column("name", sa.String(), nullable=True),
        sa.Column("description", sa.String(), nullable=True),
        sa.ForeignKeyConstraint(
            ["study_id"],
            ["studies.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "entities",
        sa.Column("id", sa.Text(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("study_id", sa.Text(), nullable=True),
        sa.Column("label", sa.String(), nullable=True),
        sa.Column("level", sa.String(), nullable=True),
        sa.Column("data", sa.JSON(), nullable=True),
        sa.ForeignKeyConstraint(
            ["study_id"],
            ["studies.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "analysis_conditions",
        sa.Column("weight", sa.Float(), nullable=True),
        sa.Column("analysis_id", sa.Text(), nullable=False),
        sa.Column("condition_id", sa.Text(), nullable=False),
        sa.ForeignKeyConstraint(
            ["analysis_id"],
            ["analyses.id"],
        ),
        sa.ForeignKeyConstraint(
            ["condition_id"],
            ["conditions.id"],
        ),
        sa.PrimaryKeyConstraint("analysis_id", "condition_id"),
    )
    op.create_table(
        "images",
        sa.Column("id", sa.Text(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("url", sa.String(), nullable=True),
        sa.Column("filename", sa.String(), nullable=True),
        sa.Column("space", sa.String(), nullable=True),
        sa.Column("value_type", sa.String(), nullable=True),
        sa.Column("analysis_id", sa.Text(), nullable=True),
        sa.Column("data", sa.JSON(), nullable=True),
        sa.Column("add_date", sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["analysis_id"],
            ["analyses.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "points",
        sa.Column("id", sa.Text(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("x", sa.Float(), nullable=True),
        sa.Column("y", sa.Float(), nullable=True),
        sa.Column("z", sa.Float(), nullable=True),
        sa.Column("space", sa.String(), nullable=True),
        sa.Column("kind", sa.String(), nullable=True),
        sa.Column("image", sa.String(), nullable=True),
        sa.Column("label_id", sa.Float(), nullable=True),
        sa.Column("analysis_id", sa.Text(), nullable=True),
        sa.ForeignKeyConstraint(
            ["analysis_id"],
            ["analyses.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "image_entities",
        sa.Column("image", sa.Text(), nullable=True),
        sa.Column("entity", sa.Text(), nullable=True),
        sa.ForeignKeyConstraint(
            ["entity"],
            ["entities.id"],
        ),
        sa.ForeignKeyConstraint(
            ["image"],
            ["images.id"],
        ),
    )
    op.create_table(
        "point_entities",
        sa.Column("point", sa.Text(), nullable=True),
        sa.Column("entity", sa.Text(), nullable=True),
        sa.ForeignKeyConstraint(
            ["entity"],
            ["entities.id"],
        ),
        sa.ForeignKeyConstraint(
            ["point"],
            ["points.id"],
        ),
    )
    op.create_table(
        "point_values",
        sa.Column("id", sa.Text(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("point_id", sa.Text(), nullable=True),
        sa.Column("kind", sa.String(), nullable=True),
        sa.Column("value", sa.String(), nullable=True),
        sa.Column("dtype", sa.String(), nullable=True),
        sa.ForeignKeyConstraint(
            ["point_id"],
            ["points.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("point_values")
    op.drop_table("point_entities")
    op.drop_table("image_entities")
    op.drop_table("points")
    op.drop_table("images")
    op.drop_table("analysis_conditions")
    op.drop_table("entities")
    op.drop_table("analyses")
    op.drop_table("studies")
    op.drop_table("roles_users")
    op.drop_table("oauth")
    op.drop_table("datasets")
    op.drop_table("users")
    op.drop_table("roles")
    op.drop_table("conditions")
    # ### end Alembic commands ###
