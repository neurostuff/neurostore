version: "2"
services:
  compose:
    image: compose
    restart: always
    build: 
      dockerfile: ./neurosynth_compose/Dockerfile
      context: ./
    expose:
      - "8000"
    volumes:
      - ./postgres/migrations:/migrations
      - ./:/compose
    command: /usr/local/bin/gunicorn -w 2 -b :8000 neurosynth_compose.core:app --log-level debug --timeout 120
    env_file:
      - .env

  compose_nginx:
    image: compose_nginx
    restart: always
    build: ./nginx
    expose:
      - "80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    volumes_from:
      - compose
    environment:
      - VIRTUAL_HOST=${V_HOST}
      - LETSENCRYPT_HOST=${V_HOST}

  compose_pgsql:
    image: compose_pgsql
    restart: always
    build: ./postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    expose:
      - '5432'
    env_file:
      - .env

  compose_redis:
    image: redis
    expose:
      - '6379'

  worker:
    image: worker
    build:
      dockerfile: ./neurosynth_compose/Dockerfile
      context: ./
    depends_on:
      - compose
      - compose_redis
    entrypoint: celery -A neurosynth_compose.core.celery_app worker --loglevel=info
    volumes:
      - /logs/compose:/logs:rw
    env_file:
      - .env

  # monitor:
  #   build:
  #     context: ./
  #     dockerfile: celery_worker/Dockerfile
  #   ports:
  #    - "5555:5555"
  #   entrypoint: celery -A tasks flower --auth="jamesdkent21@gmail.com" --url-prefix=flower
  #   volumes:
  #     - ./celery_worker:/celery_worker
  #   depends_on:
  #     - compose_redis
  #   env_file:
  #      - .env

volumes:
  postgres_data:

networks:
  default:
    external:
      name: nginx-proxy
